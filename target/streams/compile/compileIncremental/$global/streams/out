[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/org/poster/views/html/hello.template.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/org/poster/views/html/post.template.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/post.template.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/hello.template.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/view/MyScalatraServlet.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(org.poster.views.html.hello, org.poster.views.html.post, org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(org.poster.views.html.hello, org.poster.views.html.post, org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/post.template.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/hello.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/view/MyScalatraServlet.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 5 sources: invalidated sources (5) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 5 Scala sources to /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.2:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.2:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 580fbfd0 for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vldmr/.sbt/boot/scala-2.12.6/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes:/home/vldmr/.ivy2/cache/com.typesafe.play/twirl-api_2.12/jars/twirl-api_2.12-1.3.13.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra_2.12/jars/scalatra_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra-common_2.12/jars/scalatra-common_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/vldmr/.ivy2/cache/com.googlecode.juniversalchardet/juniversalchardet/jars/juniversalchardet-1.0.3.jar:/home/vldmr/.ivy2/cache/eu.medsea.mimeutil/mime-util/bundles/mime-util-2.1.3.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.6.jar:/home/vldmr/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar:/home/vldmr/.sbt/boot/scala-2.12.6/lib/scala-reflect.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-webapp/jars/jetty-webapp-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-xml/jars/jetty-xml-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-util/jars/jetty-util-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-servlet/jars/jetty-servlet-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-security/jars/jetty-security-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-server/jars/jetty-server-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/javax.servlet/javax.servlet-api/jars/javax.servlet-api-3.1.0.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-http/jars/jetty-http-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-io/jars/jetty-io-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc_2.12/jars/scalikejdbc_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-core_2.12/jars/scalikejdbc-core_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-dbcp2/jars/commons-dbcp2-2.5.0.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-pool2/jars/commons-pool2-2.6.0.jar:/home/vldmr/.ivy2/cache/commons-logging/commons-logging/jars/commons-logging-1.2.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.1.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-collection-compat_2.12/bundles/scala-collection-compat_2.12-0.1.1.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-interpolation_2.12/jars/scalikejdbc-interpolation_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-interpolation-macro_2.12/jars/scalikejdbc-interpolation-macro_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/com.h2database/h2/jars/h2-1.4.197.jar:/home/vldmr/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.2.3.jar:/home/vldmr/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.2.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 6.252876846 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from views.html.hello...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.view.MyScalatraServlet: Set(UsedName(apply,[Default]), UsedName(hello,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(views.html.hello,ModifiedNames(changes = UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hello,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The views.html.hello has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hello,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.views.html.hello...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.views.html.hello,ModifiedNames(changes = UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hello,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The org.poster.views.html.hello has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(hello,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.views.html.post...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.views.html.post,ModifiedNames(changes = UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(post,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]))) invalidates 1 classes due to The org.poster.views.html.post has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(post,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from views.html.post...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.view.MyScalatraServlet: Set(UsedName(apply,[Default]), UsedName(post,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(views.html.post,ModifiedNames(changes = UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(post,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]))) invalidates 2 classes due to The views.html.post has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(format,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(f,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(equals,[Default]), UsedName(hashCode,[Default]), UsedName(apply,[Default]), UsedName(ref,[Default]), UsedName(productArity,[Default]), UsedName(notifyAll,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$1,[Default]), UsedName(render,[Default]), UsedName(productIterator,[Default]), UsedName($isInstanceOf,[Default]), UsedName(wait,[Default]), UsedName(_display_,[Default]), UsedName(post,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(canEqual,[Default]), UsedName(##,[Default]), UsedName(finalize,[Default]), UsedName(notify,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(views.html.post)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding org.poster.ScalatraBootstrap by org.poster.view.MyScalatraServlet[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
