[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/DBWorker.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/Post.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/User.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/Post.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/auth.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/DBWorker.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/User.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/view/MyScalatraServlet.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/post.template.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/hello.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/ScalatraBootstrap.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/view/MyScalatraServlet.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/views/html/hello.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/Main.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/ScalatraBootstrap.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/view/MyScalatraServlet$$anon$1.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/views/html/post.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/views/html/post$.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/control/DBWorker$.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/model/User.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/control/DBWorker.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/views/html/hello$.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/view/MyScalatraServlet$$anon$1$$anonfun$receive$1.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/org/poster/model/Post.class, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes/Main$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(org.poster.view.MyScalatraServlet, ScalatraBootstrap, org.poster.model.User, org.poster.control.DBWorker, views.html.hello, views.html.post, org.poster.model.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/DBWorker.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/view/MyScalatraServlet.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/post.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/Post.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/hello.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/ScalatraBootstrap.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/Main.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/User.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(org.poster.view.MyScalatraServlet, ScalatraBootstrap, org.poster.model.User, org.poster.control.DBWorker, views.html.hello, views.html.post, org.poster.model.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/DBWorker.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/view/MyScalatraServlet.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/Post.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/post.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/Post.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/hello.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/ScalatraBootstrap.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/Main.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/User.scala, /home/vldmr/Projects/Scala/Poster/target/scala-2.12/twirl/main/views/html/auth.template.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/model/DBWorker.scala, /home/vldmr/Projects/Scala/Poster/src/main/scala/org/poster/control/User.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 9 sources: invalidated sources (12) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 9 Scala sources to /home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.2:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.2:compile for Scala 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler e9fa6eb for Scala compiler version 2.12.6[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vldmr/.sbt/boot/scala-2.12.6/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/vldmr/Projects/Scala/Poster/target/scala-2.12/classes:/home/vldmr/.ivy2/cache/com.typesafe.play/twirl-api_2.12/jars/twirl-api_2.12-1.3.13.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-xml_2.12/bundles/scala-xml_2.12-1.0.6.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra_2.12/jars/scalatra_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra-common_2.12/jars/scalatra-common_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/vldmr/.ivy2/cache/com.googlecode.juniversalchardet/juniversalchardet/jars/juniversalchardet-1.0.3.jar:/home/vldmr/.ivy2/cache/eu.medsea.mimeutil/mime-util/bundles/mime-util-2.1.3.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-lang3/jars/commons-lang3-3.6.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra-scalate_2.12/jars/scalatra-scalate_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.scalatra.scalate/scalate-core_2.12/jars/scalate-core_2.12-1.8.0.jar:/home/vldmr/.sbt/boot/scala-2.12.6/lib/scala-compiler.jar:/home/vldmr/.sbt/boot/scala-2.12.6/lib/scala-reflect.jar:/home/vldmr/.ivy2/cache/org.scalatra.scalate/scalate-util_2.12/jars/scalate-util_2.12-1.8.0.jar:/home/vldmr/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-webapp/jars/jetty-webapp-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-xml/jars/jetty-xml-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-util/jars/jetty-util-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-servlet/jars/jetty-servlet-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-security/jars/jetty-security-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-server/jars/jetty-server-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/javax.servlet/javax.servlet-api/jars/javax.servlet-api-3.1.0.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-http/jars/jetty-http-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-io/jars/jetty-io-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc_2.12/jars/scalikejdbc_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-core_2.12/jars/scalikejdbc-core_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-dbcp2/jars/commons-dbcp2-2.5.0.jar:/home/vldmr/.ivy2/cache/org.apache.commons/commons-pool2/jars/commons-pool2-2.6.0.jar:/home/vldmr/.ivy2/cache/commons-logging/commons-logging/jars/commons-logging-1.2.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.1.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-collection-compat_2.12/bundles/scala-collection-compat_2.12-0.1.1.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-interpolation_2.12/jars/scalikejdbc-interpolation_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/org.scalikejdbc/scalikejdbc-interpolation-macro_2.12/jars/scalikejdbc-interpolation-macro_2.12-3.3.0.jar:/home/vldmr/.ivy2/cache/com.h2database/h2/jars/h2-1.4.197.jar:/home/vldmr/.ivy2/cache/mysql/mysql-connector-java/jars/mysql-connector-java-5.1.24.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra-atmosphere_2.12/jars/scalatra-atmosphere_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.scalatra/scalatra-json_2.12/jars/scalatra-json_2.12-2.6.3.jar:/home/vldmr/.ivy2/cache/org.json4s/json4s-core_2.12/jars/json4s-core_2.12-3.5.2.jar:/home/vldmr/.ivy2/cache/org.json4s/json4s-ast_2.12/jars/json4s-ast_2.12-3.5.2.jar:/home/vldmr/.ivy2/cache/org.json4s/json4s-scalap_2.12/jars/json4s-scalap_2.12-3.5.2.jar:/home/vldmr/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/home/vldmr/.ivy2/cache/org.atmosphere/atmosphere-runtime/bundles/atmosphere-runtime-2.4.13.jar:/home/vldmr/.ivy2/cache/org.atmosphere/atmosphere-redis/bundles/atmosphere-redis-2.4.4.jar:/home/vldmr/.ivy2/cache/redis.clients/jedis/jars/jedis-2.7.3.jar:/home/vldmr/.ivy2/cache/org.atmosphere/atmosphere-compat-jbossweb/bundles/atmosphere-compat-jbossweb-2.0.1.jar:/home/vldmr/.ivy2/cache/org.atmosphere/atmosphere-compat-tomcat/bundles/atmosphere-compat-tomcat-2.0.1.jar:/home/vldmr/.ivy2/cache/org.atmosphere/atmosphere-compat-tomcat7/bundles/atmosphere-compat-tomcat7-2.0.1.jar:/home/vldmr/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.3.jar:/home/vldmr/.ivy2/cache/com.typesafe/config/bundles/config-1.3.1.jar:/home/vldmr/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/vldmr/.ivy2/cache/org.json4s/json4s-jackson_2.12/jars/json4s-jackson_2.12-3.5.2.jar:/home/vldmr/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.8.4.jar:/home/vldmr/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.8.0.jar:/home/vldmr/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.8.4.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-plus/jars/jetty-plus-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-jndi/jars/jetty-jndi-9.4.7.v20170914.jar:/home/vldmr/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.2.3.jar:/home/vldmr/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.2.3.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty.websocket/websocket-server/jars/websocket-server-9.4.6.v20170531.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty.websocket/websocket-common/jars/websocket-common-9.4.6.v20170531.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty.websocket/websocket-api/jars/websocket-api-9.4.6.v20170531.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty.websocket/websocket-client/jars/websocket-client-9.4.6.v20170531.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty/jetty-client/jars/jetty-client-9.4.6.v20170531.jar:/home/vldmr/.ivy2/cache/org.eclipse.jetty.websocket/websocket-servlet/jars/websocket-servlet-9.4.6.v20170531.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 26.748833454 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.model.DBWorker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.model.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.model.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.control.Post: Set(UsedName(setCursor,[Default]), UsedName(DBWorker,[Default]), UsedName(getRow,[Default]), UsedName(SetPost,[Default]), UsedName(ne,[Default]), UsedName(isAccessed,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.view.MyScalatraServlet: Set(UsedName(DBWorker,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of ScalatraBootstrap: Set(UsedName(DBWorker,[Default]), UsedName(connectDB,[Default]), UsedName(disconnectDB,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.model.DBWorker,ModifiedNames(changes = UsedName(setCursor,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(password,[Default]), UsedName(DBWorker,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(cursor,[Default]), UsedName(asInstanceOf,[Default]), UsedName(logger,[Default]), UsedName(getClass,[Default]), UsedName(connection,[Default]), UsedName(getRow,[Default]), UsedName(connectDB,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(SetPost,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(disconnectDB,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(username,[Default]), UsedName(url,[Default]), UsedName(getAll,[Default]), UsedName(finalize,[Default]), UsedName(isAccessed,[Default]))) invalidates 4 classes due to The org.poster.model.DBWorker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(setCursor,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(password,[Default]), UsedName(DBWorker,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(cursor,[Default]), UsedName(asInstanceOf,[Default]), UsedName(logger,[Default]), UsedName(getClass,[Default]), UsedName(connection,[Default]), UsedName(getRow,[Default]), UsedName(connectDB,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(SetPost,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(disconnectDB,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(username,[Default]), UsedName(url,[Default]), UsedName(getAll,[Default]), UsedName(finalize,[Default]), UsedName(isAccessed,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.model.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(org.poster.control.Post, org.poster.view.MyScalatraServlet, ScalatraBootstrap)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.control.DBWorker...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.control.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.control.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.control.DBWorker,ModifiedNames(changes = UsedName(setCursor,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(password,[Default]), UsedName(DBWorker,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(cursor,[Default]), UsedName(asInstanceOf,[Default]), UsedName(logger,[Default]), UsedName(getClass,[Default]), UsedName(connection,[Default]), UsedName(getRow,[Default]), UsedName(connectDB,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(SetPost,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(disconnectDB,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(username,[Default]), UsedName(url,[Default]), UsedName(getAll,[Default]), UsedName(finalize,[Default]), UsedName(isAccessed,[Default]))) invalidates 1 classes due to The org.poster.control.DBWorker has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(setCursor,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(password,[Default]), UsedName(DBWorker,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(cursor,[Default]), UsedName(asInstanceOf,[Default]), UsedName(logger,[Default]), UsedName(getClass,[Default]), UsedName(connection,[Default]), UsedName(getRow,[Default]), UsedName(connectDB,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(SetPost,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(disconnectDB,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(eq,[Default]), UsedName(username,[Default]), UsedName(url,[Default]), UsedName(getAll,[Default]), UsedName(finalize,[Default]), UsedName(isAccessed,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.control.DBWorker)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.model.Post...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.model.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.model.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.model.Post,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(GetPostDate,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Post,[Default]), UsedName(getClass,[Default]), UsedName(GetAllPosts,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(org;poster;model;Post;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(eq,[Default]), UsedName(name,[Default]), UsedName(WritePost,[Default]), UsedName(msg,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The org.poster.model.Post has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(GetPostDate,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Post,[Default]), UsedName(getClass,[Default]), UsedName(GetAllPosts,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(org;poster;model;Post;init;,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(eq,[Default]), UsedName(name,[Default]), UsedName(WritePost,[Default]), UsedName(msg,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.model.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.view.MyScalatraServlet...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of ScalatraBootstrap. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.view.MyScalatraServlet,ModifiedNames(changes = UsedName(pwork,[Default]))) invalidates 1 classes due to The org.poster.view.MyScalatraServlet has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(pwork,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from org.poster.control.Post...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(org.poster.control.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(org.poster.control.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.view.MyScalatraServlet: Set(UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Post,[Default]), UsedName(GetAllPosts,[Default]), UsedName(org;poster;control;Post;init;,[Default]), UsedName(WritePost,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of views.html.hello: Set(UsedName(!=,[Default]), UsedName(Post,[Default]), UsedName(date,[Default]), UsedName(name,[Default]), UsedName(msg,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(org.poster.control.Post,ModifiedNames(changes = UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(GetPostDate,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Post,[Default]), UsedName(getClass,[Default]), UsedName(GetAllPosts,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(org;poster;control;Post;init;,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(eq,[Default]), UsedName(name,[Default]), UsedName(WritePost,[Default]), UsedName(msg,[Default]), UsedName(finalize,[Default]))) invalidates 3 classes due to The org.poster.control.Post has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(GetPostDate,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Post,[Default]), UsedName(getClass,[Default]), UsedName(GetAllPosts,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName($isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(org;poster;control;Post;init;,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(eq,[Default]), UsedName(name,[Default]), UsedName(WritePost,[Default]), UsedName(msg,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(org.poster.control.Post)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(org.poster.view.MyScalatraServlet, views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from views.html.auth...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(views.html.auth)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(views.html.auth)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(views.html.auth,ModifiedNames(changes = UsedName(format,[Default]), UsedName(canEqual,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(auth,[Default]), UsedName(productIterator,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(render,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(productArity,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(ref,[Default]), UsedName($isInstanceOf,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName(finalize,[Default]))) invalidates 1 classes due to The views.html.auth has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(format,[Default]), UsedName(canEqual,[Default]), UsedName(clone,[Default]), UsedName(!=,[Default]), UsedName(auth,[Default]), UsedName(productIterator,[Default]), UsedName(notify,[Default]), UsedName(synchronized,[Default]), UsedName(_display_,[Default]), UsedName($init$,[Default]), UsedName(notifyAll,[Default]), UsedName(==,[Default]), UsedName(isInstanceOf,[Default]), UsedName(render,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy,[Default]), UsedName(getClass,[Default]), UsedName(productArity,[Default]), UsedName(productPrefix,[Default]), UsedName(wait,[Default]), UsedName(hashCode,[Default]), UsedName(ref,[Default]), UsedName($isInstanceOf,[Default]), UsedName(f,[Default]), UsedName(apply,[Default]), UsedName(equals,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(productElement,[Default]), UsedName(finalize,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(views.html.auth)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from views.html.hello...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of org.poster.view.MyScalatraServlet: Set(UsedName(apply,[Default]), UsedName(hello,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(views.html.hello,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(render,[Default]), UsedName(f,[Default]), UsedName(hello,[Default]))) invalidates 2 classes due to The views.html.hello has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(render,[Default]), UsedName(f,[Default]), UsedName(hello,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(views.html.hello)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(org.poster.view.MyScalatraServlet)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(ScalatraBootstrap)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(ScalatraBootstrap)[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
